(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    181929,       3879]
NotebookOptionsPosition[    131622,       2961]
NotebookOutlinePosition[    177931,       3815]
CellTagsIndexPosition[    177888,       3812]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Problema 1)\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQd4FNX3/uktSAkQeg29SgcVEEGkqjSlhB7ERgtdUHpREFBApEkRUaQr
vUoJBDCAFOmEXkIX5SsKzO/97/vs+V9mk01YNiTB83me7DOZnZ25fc57y7l5
23dt9E6iBAkS9EiBj0bt+lQPCmrXr3E6/NO0S4/3OnXpGFinS8+OnToGVWqf
GCdX4i9B0gQJ/t+xpSiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoij/Me7fv//vv/8+ePBAzjx8+BCf//zzz99//42D//3v
f7EWOEVRFEVRFEVRFEV5YqhzI+NPB08tMIqiKIqiKIqiKIoSEzx0YJ65f/8+
Pu/du/fgwQP5Cgd//PFHLIRPURRFURRFURRFUZ4YU95S7eLzn3/+sRz6F59/
/fWXqYIVRVEURVEURVEUJT7y77//8oCy11z8ax7fvXsX3+osaEVRFEVRFEVR
FCWewkFeyzH+y2nPBLqYPq9u3Lhx4sSJkJCQ2AmfoiiKoiiKoiiKongD0bwy
2osz0Lw8vnDhwhdffFGhQoXcuXNv27ZNxLKiKIqiKIqiKIqixEdkzS+4ffv2
kSNHgoKCGjVqVLJkybRp0yZIkCBr1qxnz56N3UAqiqIoiqIoiqIoisfIsK/o
38uXL//yyy+FCxd+9dVXR44c2bBhw6RJk/r7++/bty/2ghlvYHpKYv7999/m
wDoP/ve//3HZtbnbMj2PmWuu4wX37t3jPHkc3L17V05aEfkVfwbgFtjMSnM7
bBzjpMT3fw5iJYTehZl7584d/osI/vXXX5bTb4Ccp5e8WAqjJzAH6dCeju55
PsIS+2zMe7ly5YrljOCtW7csR+bKDu/SZEktVhRFURRFeSYRw08cYYGbN2/e
uHEDQhifffr0SZIkSbZs2UJDQ2MpjPEJ2TrK/FeOzUS2HIlv2tsigeOXlLAc
8kciTjUh68cth3VtysZnAOgmZBaVAmIn8WKURfnevn07tkIYE7CsIo5mMZbM
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
Xbfy4QYoMgQZu1tjmBv0LFiwIG/evN26deO/MAs5fCO7+TB5cTJjxozZs2dH
BMW4NVMeFuCXX34JqZspUyZuK8zLZs2aBRPU398fdqPpF5oHpvKNLAelbNiG
pEmUrs/+cGA5ljxPnTq1devW0Iae+b9iCKERuB4Qd7OcRu+5c+deeOEFnNy8
ebO4xo0QhFYmstIIty0Zlp2nHmuCsXn/HTt2IDBTpkzh7HSPJx4gy1q2bAlj
vnLlyshThgp1tmPHjohpYGCgjP67GaqTdeLmhqrScWQuUrai6sdggpilCPep
UKHChx9+iOBxukWU669N2cJbIYQopcmSJUudOnVISAiHXHH++++/hyRMkyaN
FPjoDy6LfJMIohhzfbHlXBPtvsmiOhY3XBMmTChVqpQHLuWlijGnwsLCChUq
hOwbP368FNTjx4/7+fmx9EZ2H6aVrYtG+h7ZV/MkI7ZIHzaS+/btQ55Onz7d
clmpEU0YyICAAMQIkTUnFbzzzjtc5cF/3WeB7ANlu9L1bcVvWdfQutasWRNP
QarG+u7kiqIoiqLEBWj/03/y4sWLS5YsuWzZMsu5w4747YTESJIkCTTXL7/8
wh/CxoBNyAsaNGjAvUUEWEru/ed4C/EHZcMcbqMdyDnepvdjrrSNXaNIrEEE
eOvWrcWLF+f4CCIF42379u19+/aFxmEcZXi9R48esOh4pWW4vRI/2LDMK1as
iGsaN25sps/HH3+Mk/nz5798+bJEXIxJObBNXxf34LYJsa5JF/0RUjxr6NCh
hQsXfpJ9hRDO/v37QytBL5w4cULmJOCekIqIKXdPjmZ4GHhzLre5Y5Tl6cL2
nTt3JkyYcNiwYR78VkBSo2Jy5TVde1nGIBrOv/7669EPobmdtDnuGU1nvIQd
R5LjSDSUWAicNm3ayDXUdG5Khal/eYy8e+mllzJlylS+fHmZnYI7/PDDDz4+
PshrCBn+llnjPsqMCMNmOR3F22In/7qf/2z+O27cuESJEklIoo9Z6VDlWZGr
Vq3KXWsth/yHMPf394fY//bbb6N5Wwpe1llzRjcz+kmE8O7duxHCTz/91LOf
M+t//vnn5557Ln369CNGjGAvDbuAunTpgpvj9eHqhjFCUD6lt1D2NGfOcjID
UsCMMsv2Rx99lCZNGlQT9X+lKIqiKIpleCaBTdKsWbO6deuaewmRc+fOpUqV
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
eICTHNWVcWGcwfm//vpLfvjHH3/oyK+iKIqiKIqiKIoSv/jHAY+peaF28fn3
33/zJBf5UiPfunVLfug6ZKwoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqL873//e/jwIQ/wee/ePZ7/
999///nnH7nG/EpRFEVRFEVRFEVR4i937tyB5pV/qXZx5u+//8YxNLLIYUVR
FEVRFEVRFEWJX0DbmpqX8Mxff/1lnoQ6fnrBUhRFURRFURRFURRvA50LFXz9
+vX79+9bzmHfP//8k5OiHzx4QOWrg7+KoiiKoiiKoihK/AXylrI3LCzs6tWr
OLh9+zZX+0L/Xrt2DRfg+I8//sC/vFJRFEVRFEVRFEVR4iNQuwsXLixYsGD5
8uWPHz9+9+5dnLx8+fKNGzc2b97ctWvXJk2aDBs2zHWatKIoiqIoiqIoiqLE
Ix4+fBgYGJggQYJs2bJdunTJciwKvnLlSocOHXLkyJHAwfPPP79r167YDqmi
KIqiKIqiKIqieAjE7507d8qXL58qVaqGDRvi3wcPHvz4449lypR555131q5d
W7ZsWT8/v48++shy+sVSFEVRFEXxCmJacI1VhJtN/P3333/99Rfdkri/D2yY
e/fucRkXbmj7CZd0ub+P4hmSfUhk2UATJ7mHiOV0IyNZE6uBVTyBeSewHiGv
//zzT/M8MpcVTXIZ14hPoacUVsVLcPUrKy+3BLKMJvTu3buS+1I8UN/pOQoH
zPFY148PnZgnDx06lDt37gQJEkydOvX69esTJ07Mly/f4MGD//jjDwQ7ODh4
9+7dOG+5lPzoYNsyWKoAUxKfN2/e5Fc2d9M2mHQ2H9S6H7HXQe6wbHPFN08y
j8wyz8xSE+KZQWwV1inZExwnpUgQro9QniVEa0iLKsVAbBVcQ0vm1q1bcg3b
AbVnlCeEJdD1hcL3PkqazbqODLOlwm9RMqVs4xjl2bQZYt0eeya5ceOGNBFM
YVPnIhfkDaL6Nz7CSurarUTwRrjvQCqXvB3Ug9AzA5pZ1mLkspmnYhIIUhLi
iFhwDcbWrVshfhMlSrRkyZI+ffoULVp0xowZkD9ygcheD6KA1xblP25oe8dJ
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
44BLoPy9KJ6vhofx59Hkfl7XR7Xlxr+Z7+UnN9xwg2yBLS/axkPpKIBxYfD7
9u2rszD4iiv8SpvCqm3+s/EboRDiT4NtoluVsfHBbITzw0wDHyCWfIa3335b
F5V4aQmTdjPXCbt22203hmvFihVRrP+z5jPnf6k6gg5MWKjEduys8JnPuvPG
G2+k70Rz2mgfpdWm2kMXICgxfq1atbp27Yr06aUEUPwKbomqxwpgVtj4vPXW
W3vssQcNNhotXbqUGLZDhw62cJ/HlBtLK7WMv8cccwz+hogoMDISN15q+YEM
qWrqnnLKKYQPciGyPjkPjDHQexZuVxSmJHkITEhQYFs4NUqmRhQVjhgxwtfW
Q9I1CYx+tiZVk5nGrGYXhwdB23333fGHdQXnkIgJHoYQBeooiYOGvVu3bvxc
XqJNZ0k3as7c6KJNc7zoq6++SqTyVsn6r5+miOJQ0XZnJ+KUcqFsSb94Klhf
LDzRY80QREUt2dhPCNnk2umx1113HSM2dOhQKUzLysiDPPGvLSN+/vnnXbp0
OeSQQzZv3mw1ExguL4PLli2DSVAF06ZNE1dw8z777NOxY8cNGzZ4PqmGroUk
d9SoUUR8hx9+uOpp02YFR2gelFKB7r2pSjwK6Sv7SkZfSQU+RYTIq3v37ppT
YsyLW03TqNJmf6JoRR9i+W+fffZZixYtMO62KOATIfRkUZxmP/744xJbCN24
cWN+pZLmNmI7fGbP4L1lhF30PfbYY1FlCmquvPLKXXfdFVNuxUwyU1szocO4
MY48rX///pIL/VCJLkqLUiymU1/btm2LXpXt4NVF783xiUaVOXwTQkPx1q1b
Q3oNhV+4NIorG+exxx7TVwRrOM/4bNX/0C4FQdAXk92jRw9r8MUXX6y0ljy/
tY0M4gokVPTC+cGBHzhwoM5F1c18tpl825oNg+Ej4fsh41w0zWw76aIQ/1Yc
tpNX/1rdJK737t0bstaoUeONN97Qt6o8Y1pRpCRy2WuvveTNKtAzWlfbrYgV
hWxKZneI0TB2iIMqjkZld4X4z3ni38RXioZwEZs3b96sWTMUna8t5mfnZs2a
BYFwGLR4JN142WWX8eTBgwdXE5c4AfN8UnFhBCJ3ujBx4sQo5j2AH9WkSRN0
wurVq/PnC+mD7lECGB/+8Ic/yH+LXDCol/opZeLuRo0aHXXUUdoqKBQy22xJ
XFFa56DteR2Wy9uOzDWpBOxOYyr8+fr16x944IEmg5m8QWgMs0FxazZyesst
t+y8884qVuOHorqBnn7yySe0EwJhRGRN6On69euhOBc/+OAD3Vmu9vaS+NBD
DzEmw4YN83GBLUOYGP7+979Hmnr27OkjZUH3lOvs2TQFLDp27Fh/pGyFYNPs
dLx27dpQPLFg7ROzH3nkEUYGpxoZt4zfIUOGWHkin0pdXHuqCqmMbW5cwRYP
GjQIqz1mzBiNMGoK5YaLy8UPP/ww68J6JswBRg/PnDkThuexPv04cRt44YUX
6tat26tXL9tD6uW6CuNfW+GlOyNGjLCJncyXZoVvvM2bCT5T1GseP6Fa9CYj
COEFDZm65557cN2tioIRFNcrz3Oyxr9eGKO4NDEcq6VJPU23WYywZs2a888/
H0GGFubywSf4mdgChrRcjbrDMXfuXJ2opfNHNLw333yzzmvWPepa4fq5T58+
sPqqVas0nlnDQCTiggsuYOh8QkVFYXKEOsUcaxqn6PlznqMK1aivKN1fe5pU
FgQ9/fTTiX9HjhxpuRk4VDqRQUJk+SQ+a2tHwdjbVn9wfWkq3u+SJUt0D33U
4iCGxmYhfAJSnudrzDFk/Hz58uWJdVhPC1iLuLtmzZoQq9wyKeXi6aefvvvu
u/2u7eKeM3XqVK3kRvH+d130OSqMg85JsX3rDBHKWTVYsMvVcL0mse9g3rx5
NBWNZPuPoNGkSZO4eMwxx+R/lFWpTQAZ5+cWZEXZ+AS9gZg0aNAAfaIrVlHN
thpFIf6tOCzLAjnylvSPf/zjvvvui+5VcXUtqfjyhjbCUOSEE07Qlg3oq2yc
6jNfV0lkiiRXEFvNxR1yyCGdO3dmrDQX5Kt+SX3ZLH2u+DfzjVJBo0aNqlGj
xk033WSaxKab5PXhPPN2/OfLL7+clpic4j/gWB533HG2bap6goG67777YLA9
9thDmX7imXXr1h166KEqYpnHXvhdY6XpgmyMA6OkDDoMqF+dYcTgYZUgWLx4
cePGjTE0WnDkilXj4Sf5/cnMZQhIKbWvFWTL6Ivyur7e6RVvEFLxnFtvvdVm
9iyZWWKF36iCxmjCKE6PV5u1CQgXixuq7YyTxlbmY++99/YndMDJTZs25Tp+
o9L58tDdOihxUA26jh078sylS5dGLvK1wecnzzzzDHqMsDEhTam4pJUpq/xW
w7595ZVX8D3g3mIGIob4EPGn1+hPrSn4FT19+PLLL1u3bo1nO3r0aDGe1tRu
uOEGGoDBtYrfUTVYIknEv7SHkccpov377bcfHl2UDhU//fRTBJC+2xyCqcr8
0G08tnnz5vXr13/rrbfED1Y0zNb98UgJyi6++GItGWdupqiS+FfCriQTHohi
QWnjlHrBzywH7VGao0aWRbuaVUts91DjzSIUMdXpV4vQM3ARI4YQTZgwQbLJ
uGnQyg3Wssa//ld81b59+2bNmiHpFhTo4daRmTNnwieNGjVatmyZjcCmTZuO
OOII+GThwoW6aFX+qhtWr16NBt51110HDhwYpbufimuk4JG2adNGHOLPjMgK
P+Pxpz/9CYVZt27doUOHak3WvoJ8ymD54osv7rzzTuTr8ccf109ghqJ3g/LY
Xr16tWzZUlNGxakUGvb+++8fddRRhx122IcffphZhUO6btq0abVjKPlTbhXv
7dGjB0Jk1ZMs6TQqti5xVcFrmCi2+6eddppOobKCXbT2gQce2G233bRDU3fa
1E0e1tVXMPzLL7+Mbr/sssvMDTBbKZGBxDfeeCNe05w5c3RdsweqA1nRTtEq
QmkoJR9MKEKfINqwDa7XmjVrLPEjofemTJnCyNSrV48ALUpv5eCHJ510El2m
O9UwarMNFwz+li1bunTpor0hkdu2Bjlw5rHUhcxFqPiz5TkjwjgnDMull14K
BW07j+19Uy1iWfwFCxboIRJPSy2weeAQ/xYBb6ylt2FgrGHNGGeddZZyWkQX
aTPJO8OOJ3PKKadoUkIC7vXVv0f9q6hstGKZCYht7969P/74Y3UWK89YJcoC
WzWJAuNfrZ7zin333bdBgwZWBCkRSXGD9tD9+te/NqEQUZAjrnfq1KncrZQ7
BEogj+LcNuJ3Je6i0o1VVqxYofxYbQ/JA7GiOVSWL3399dfDt5dcckmUnnPz
W/Cee+65du3acY9lKuKiKKVE/xZSr8YOo4ni0tN4bnfddZe+tZS/qIDVCss7
YgTwYfbZZx/t/OUV1h6L+K666iocAxwG3H5v6XDy4aUOHTpoBJQdl/+9OwR/
/OMfW7RoQftvuukm7U/XEueqVatE8blz527Le9iooCyUyE2ojh8/Hs/zyiuv
tOOfbGD5iypr27bt2LFjVXuNKzQApz3TFy1XXvRA4nTNeBSh32wzER+Q8YYN
GyqP12fgmI7FM4GyWg6IXBYZ/rDqLcg10sUdLuzewdNWJlw4oh6YdtSoUeaT
Q3TcY1h9p512ktMeld19kAvmXTA+EydOJP7lsfa6yGWCLV26FE9M9bRl0R55
5BG8FO/XVTL+Fb1sNVYXUcXw4YwZMyLnOBXyKGPX0nTZKJvZ8zpEuk5fWehd
0ZYbfLiKSmnSpAmaUALIRXqhQ5Fs000u5Mp/NmdAOTm33Xab6WpRylb9oEKr
Vq3gk+HDhxufIMufffYZYZSWEX1Pq+E+QXq38847a0rHT7botDXiC0Ibq/6a
/1G6wYqx9OzZs1GjRrILUVn7AhAERAw5MrU5bNgwqwxQIYhYuHMEMlIsxXnR
CB0ql9EYM2aMpmisiAo6QTyA9UcnowFQcfTRBBNlePTRR3MdT9731ErdFtGe
qoJfg6Y9OomVyEXFM81eM/4o7QMPPJB++Ume/EJkBIVPTjzxRHw/BMrPbQrc
dueddzZu3Fgb5FV+BFdHbSiCXvzk2muvhT9xHhRtFfecRYsWMRo8yvv/gs5n
RK51DvvVV18t10sbiOgvuhoPSiUdqiEsr+/WW2/VIafz5s0TacTM2jNywAEH
5Dl325jHZ4BonJGFHj167L777mvXrpXCN3nR/CeGDOX8yiuv6LeozdGjR6Ox
/SFiIf4tGv7YLw0pGkxJlZB19uzZmW6DsfeHH3649957J0qde1gun1jI4oKK
Qk/LtVs2E9I8vuXylhPndqXcZpmE423MbNsiUumyKvBh3759UdSrV6/m85Yt
W7iIle/atatSOjMbmSv+Nd0ohpeP9+ijj+JHnXbaaeJ/a5s9FhFo3rw5uhdV
KZKZPzZgwACtBhJSaSLOLIj1VGv0UdmTCHybjSXK3VSSeSZFftGztVqGC4cH
S4cgW407fourT9/pwrPPPqtnZh4amP/52kHcqVMn5SSI96Ry33zzTYJunRur
TbuMJOEwekPVaC2xwXpBwxK51irsZjcsW7YMQlj86yv5aHnRMnJto43daeM2
ZcoUFFf37t3tikbJGIDmaSkEh1A/t3AA5VmrVi24UScg2L5UuZcWPuePj/zZ
cwUqT/9ASYf3zP32WE1UPvXUU/jJaJXFixf7EXjppZe0GqhyWFEsvOq+DvyK
ytZFtDfqA3TEORTFcZh10Vj9nXfegeI6N1aH52Jwe/Xqde+993ob5OfrfC60
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
sOt3332nr6rtYkRAQEDAvzp0hIrV4M16qlq1wjfffNO7d+86depcc801vkyi
zsna4a6OCvxa2BvWfwMCAgK2ExIK32Lh//mf/7Fy+pZTGhBQHZArqrXr8sr+
8Y9/VOfTagICAgL+DeBTcapn/Ku4kkZedNFFtWrV+s1vfuONyAcffHD33Xf/
bOeE5kLmQTnVczADAgIC/p3wPzH8FSuxixIO62gB1Q121mfk8vbtyG87wTBM
3QQEBARUOaR7pYdRvHYaY3WD0on//ve/jxo1qnHjxg8++KCu25nXkyZN6tCh
Q7Sj859lquSG6SzLEP8GBAQEbA/43ZF21jAqV8tnUdpAJMpkBQQEBAQEBAT8
q+Daa6898MADf/vb3+LMmNuDt0OYOWDAgHPOOUch/I5tZEBAQEBAQEBAQEBA
QEBA0fjrX/96//3377PPPrVr1z7xxBOHDRvWr1+/M888k7C3V69evXv3Likp
ue2223Z0MwMCAgICAgICAgICAgICKoWVK1e2a9eOIPcXv/jFL3/5y5I0atas
WaNGjXr16vF58eLF27Zt2+FHIAUEBAQEBAQEBAQEBAQEFI3LL7/8P/7jPwhy
FeoC/t1ll10sEN5zzz03bNiwo5sZEBAQEBAQEBAQEBAQEFAp/O1vf/vyyy+/
//57PmzevHnLli0//PCDPvy///f/fvzxx6+//prb/vKXv1gdxYCAgICAgICA
gICAgICAfzlY9U5f29lKKyeOvfjHP/7xszUsICAgICAgICAgICAgIKDKQWD7
97//fevWraWlpQqEf/zxR4uIiYLDOY8BAQEBAQEBAQEBAQEB/9Ig4M0MbO1c
eL6yNd///d///VlbFhAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ8K+A/w8KXJeE
     "], {{0, 182.}, {1280., 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{695.7681518554689, Automatic},
   ImageSizeRaw->{1280., 182.},
   PlotRange->{{0, 1280.}, {0, 182.}}]],ExpressionUUID->
  "e158633c-f963-4f57-95a6-97bbd69af282"]
}], "Title",
 CellChangeTimes->{{3.937682159040204*^9, 3.937682195329317*^9}, {
  3.937746067020602*^9, 3.9377460737414207`*^9}, {3.9378330659159822`*^9, 
  3.937833072741455*^9}},ExpressionUUID->"4075c040-af30-4257-abca-\
edfc3174e09c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "tenemos", " ", "que", " ", "esa", " ", "es", " ", "la", " ", 
   "energ\[IAcute]a", " ", "cin\[EAcute]tica", " ", "y", " ", "la", " ", 
   "energ\[IAcute]a", " ", "potencial", " ", "del", " ", "sistema", " ", "y", 
   " ", "de", " ", "ellas", " ", "podemos", " ", "determinar", " ", "las", 
   " ", "matrices", " ", "m", " ", "y", " ", "A"}], "*)"}]], "Input",
 CellChangeTimes->{{3.937746106318226*^9, 3.937746169680607*^9}, {
  3.937746389064126*^9, 3.9377464279733973`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"c6b5797a-f657-470d-b178-48f03d13d284"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.937737596892047*^9, 3.9377376626291037`*^9}, {
   3.9377379049712343`*^9, 3.937737912825321*^9}, {3.937738138796652*^9, 
   3.937738139383627*^9}, {3.937738256561919*^9, 3.9377382607739773`*^9}, {
   3.937738516539152*^9, 3.93773852194596*^9}, 3.937738681220357*^9, {
   3.937739487348834*^9, 3.9377394923360243`*^9}, {3.937739558032814*^9, 
   3.937739561887701*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"dfd2fe5f-4ea1-4d98-8dd6-11d005375c42"],

Cell[CellGroupData[{

Cell["Matrices m y A", "Subsubsection",
 CellChangeTimes->{{3.93768225477883*^9, 3.937682256547997*^9}, {
  3.937682309273156*^9, 
  3.937682342782119*^9}},ExpressionUUID->"88fd1815-7944-4b8f-9136-\
06b43c685a33"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", "0", ",", "0", ",", "0", 
       ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "^", "2"}]}], "\[Kappa]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", 
       RowBox[{"3", 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "^", "2"}]}], "\[Kappa]"}], ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "^", "2"}]}], "\[Kappa]"}], ",", 
       RowBox[{"3", 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", 
       RowBox[{"3", 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "^", "2"}]}], "\[Kappa]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "^", "2"}]}], "\[Kappa]"}], ",", 
       RowBox[{"3", 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "^", "2"}]}], "\[Kappa]"}], ",", "0", ",", "0", ",", 
       "0", ",", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}], ",", 
       RowBox[{"3", 
        RowBox[{"r", "^", "2"}], "\[Kappa]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.9377344428043947`*^9, 3.937734648611993*^9}, 
   3.93773533214714*^9, 3.937998613802952*^9, {3.9390395688262157`*^9, 
   3.93903961492227*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"f00bb115-732a-4ec6-a1ed-559508b3c583"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"3", " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}]},
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], "0"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}]},
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9377346776546803`*^9, 3.937735343947976*^9, 3.937737208409049*^9, 
   3.9377377101361227`*^9, {3.937738131970243*^9, 3.937738144390959*^9}, 
   3.937738535936902*^9, {3.937738694045504*^9, 3.937738715510016*^9}, 
   3.937739637425109*^9, 3.9377422973193703`*^9, 3.937742332680018*^9, 
   3.937824868109087*^9, 3.937827877550578*^9, 3.937839360737925*^9, 
   3.937994739780348*^9, 3.937995843570755*^9, 3.9379958804514647`*^9, 
   3.937995980460638*^9, 3.937997330265592*^9, 3.9379980703270273`*^9, {
   3.939039615783967*^9, 3.9390396225417967`*^9}, 3.939040114407124*^9},
 CellLabel->
  "Out[63]//MatrixForm=",ExpressionUUID->"c71028d8-5cb6-4655-9f4d-\
1e534042c689"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"Symbol", "[", "\"\<m\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"m", "*", 
    RowBox[{"r", "^", "2"}], "*", 
    RowBox[{"IdentityMatrix", "[", "6", "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "M", "]"}]}], "Input",
 CellChangeTimes->{{3.937735633682515*^9, 3.937735674280727*^9}, {
   3.937736258673875*^9, 3.937736269432164*^9}, 3.937736364214157*^9, {
   3.937827970520122*^9, 3.9378279949513197`*^9}, 3.937998603348125*^9, {
   3.939039466075458*^9, 3.939039476445857*^9}, {3.939039556896632*^9, 
   3.9390395577113123`*^9}, 3.9390401005913973`*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"076a32d6-d69d-43e2-9f31-f46ba66ef4d2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"m", " ", 
       SuperscriptBox["r", "2"]}], "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"m", " ", 
       SuperscriptBox["r", "2"]}], "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"m", " ", 
       SuperscriptBox["r", "2"]}], "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"m", " ", 
       SuperscriptBox["r", "2"]}], "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"m", " ", 
       SuperscriptBox["r", "2"]}], "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"m", " ", 
       SuperscriptBox["r", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9377356528902082`*^9, 3.937735680752425*^9}, 
   3.93773627562599*^9, 3.937736373425708*^9, 3.9377372084412117`*^9, 
   3.937737710148823*^9, {3.937738132000099*^9, 3.937738144420334*^9}, 
   3.9377385359675713`*^9, {3.937738694056168*^9, 3.9377387155420837`*^9}, 
   3.937739637455707*^9, 3.937742297342216*^9, 3.93774233270363*^9, 
   3.937824868142726*^9, 3.937827877579753*^9, 3.937839360773797*^9, 
   3.937994739820079*^9, 3.9379958436274776`*^9, 3.937995880494182*^9, 
   3.937995980498814*^9, 3.937997330300907*^9, 3.937998070356428*^9, 
   3.939039559759262*^9, 3.939039622560618*^9, {3.9390401017387667`*^9, 
   3.9390401144135857`*^9}},
 CellLabel->
  "Out[66]//MatrixForm=",ExpressionUUID->"997fb8b6-4a8f-48b9-856d-\
4aac7ea665eb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Autofrecuencias", "Subsubsection",
 CellChangeTimes->{{3.937735871364066*^9, 3.937735874797165*^9}, {
   3.937735920348096*^9, 3.9377359428012037`*^9}, {3.9377397319117804`*^9, 
   3.937739735684638*^9}, 
   3.937997971371211*^9},ExpressionUUID->"1a9f2c2f-ed51-4a34-8a07-\
914257f5ccee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"sea", " ", "\[Lambda]", " ", "los", " ", 
    RowBox[{"\[Omega]", "^", "2"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"A", "-", 
      RowBox[{"(", 
       RowBox[{"M", "*", "\[Lambda]"}], ")"}]}]}], ";"}], "\n", 
   RowBox[{"MatrixForm", "[", "\[CapitalOmega]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.937735871364066*^9, 3.937735874797165*^9}, {
   3.937735920348096*^9, 3.9377359428012037`*^9}, {3.9377397319117804`*^9, 
   3.937739735684638*^9}, 3.937997971371211*^9, {3.937998047897194*^9, 
   3.937998047900618*^9}, {3.937998572777718*^9, 3.93799858814122*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"92811736-a357-4cc0-a7e2-11b558260f1b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["r", "2"], " ", "\[Lambda]"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}]},
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["r", "2"], " ", "\[Lambda]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], "0", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["r", "2"], " ", "\[Lambda]"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["r", "2"], " ", "\[Lambda]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], "0"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["r", "2"], " ", "\[Lambda]"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}]},
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["r", "2"]}], " ", "\[Kappa]"}], "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["r", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["r", "2"], " ", "\[Kappa]"}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["r", "2"], " ", "\[Lambda]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.937735871364066*^9, 3.937735874797165*^9}, {
   3.937735920348096*^9, 3.9377359428012037`*^9}, {3.9377397319117804`*^9, 
   3.937739735684638*^9}, 3.937997971371211*^9, {3.9379980633578777`*^9, 
   3.937998070382753*^9}, 3.939039622567066*^9, 3.939040114436935*^9},
 CellLabel->
  "Out[68]//MatrixForm=",ExpressionUUID->"ab04ddf7-3298-41ff-821f-\
049b634a5727"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"determinante", "=", 
  RowBox[{"Det", "[", "\[CapitalOmega]", "]"}]}]], "Input",
 CellChangeTimes->{{3.937736545983973*^9, 3.937736553850491*^9}, 
   3.937737119206862*^9, {3.9377373084750233`*^9, 3.9377373098286667`*^9}, {
   3.937737402169634*^9, 3.937737422035109*^9}, {3.937737690615162*^9, 
   3.937737691230609*^9}, {3.937737730323063*^9, 3.937737732282516*^9}, {
   3.9377378826552896`*^9, 3.9377378876984167`*^9}, {3.937737921706531*^9, 
   3.937737925495275*^9}, {3.937738107692585*^9, 3.937738112992591*^9}, {
   3.937738851379122*^9, 3.937738858856853*^9}},
 NumberMarks->False,
 CellLabel->"In[69]:=",ExpressionUUID->"3442d4ee-8d96-4f94-8371-67b17869c2bb"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["r", "12"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "216"}], " ", "m", " ", 
     SuperscriptBox["\[Kappa]", "5"], " ", "\[Lambda]"}], "+", 
    RowBox[{"468", " ", 
     SuperscriptBox["m", "2"], " ", 
     SuperscriptBox["\[Kappa]", "4"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"360", " ", 
     SuperscriptBox["m", "3"], " ", 
     SuperscriptBox["\[Kappa]", "3"], " ", 
     SuperscriptBox["\[Lambda]", "3"]}], "+", 
    RowBox[{"120", " ", 
     SuperscriptBox["m", "4"], " ", 
     SuperscriptBox["\[Kappa]", "2"], " ", 
     SuperscriptBox["\[Lambda]", "4"]}], "-", 
    RowBox[{"18", " ", 
     SuperscriptBox["m", "5"], " ", "\[Kappa]", " ", 
     SuperscriptBox["\[Lambda]", "5"]}], "+", 
    RowBox[{
     SuperscriptBox["m", "6"], " ", 
     SuperscriptBox["\[Lambda]", "6"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.937737124062948*^9, 3.937737208507093*^9, 3.937737310499198*^9, {
   3.9377374103744793`*^9, 3.937737423043708*^9}, {3.937737703499332*^9, 
   3.937737734424059*^9}, 3.9377378885824337`*^9, 3.937737926244458*^9, {
   3.937738114173993*^9, 3.937738144460545*^9}, 3.937738536009523*^9, {
   3.937738694095619*^9, 3.93773871558216*^9}, {3.937738854945356*^9, 
   3.9377388604958963`*^9}, 3.937739637517292*^9, 3.9377400715632563`*^9, 
   3.937742297389228*^9, 3.93774233274553*^9, 3.9378248682198553`*^9, 
   3.9378278776150827`*^9, 3.937839360856759*^9, 3.937994739897009*^9, 
   3.937995843686652*^9, 3.937995880561034*^9, 3.93799598053928*^9, 
   3.9379973303581333`*^9, 3.9379980703909473`*^9, 3.939039622603427*^9, 
   3.9390401144607763`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"978a31bd-0525-4a5d-9f50-5da2ba6e3c22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soluciones", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"determinante", "==", "0"}], ",", " ", "\[Lambda]"}], "]"}], " ",
    "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "tenemos", " ", "el", " ", "caso", " ", "degenerado", " ", "porque", " ", 
    "hay", " ", "autofrecuencias", " ", "repetidas"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.93773715188405*^9, 3.937737186459104*^9}, {
  3.9377374281252413`*^9, 3.937737432435793*^9}, {3.937737715750141*^9, 
  3.937737718166479*^9}, {3.93773774955934*^9, 3.937737750467552*^9}, {
  3.937737867934643*^9, 3.9377378739277077`*^9}, {3.93773791785789*^9, 
  3.937737918927002*^9}, {3.93773812335677*^9, 3.937738127089981*^9}, {
  3.9377384619975767`*^9, 3.93773851006497*^9}, {3.937738656522552*^9, 
  3.937738711115608*^9}, {3.937738783018647*^9, 3.937738784159843*^9}, {
  3.937738831890521*^9, 3.93773886682454*^9}, {3.9377394218737497`*^9, 
  3.9377394227179213`*^9}, {3.9377397713665524`*^9, 3.937739776838148*^9}, {
  3.937739812911434*^9, 3.937739822605008*^9}, {3.937740073252812*^9, 
  3.937740079845489*^9}, {3.93903969079029*^9, 3.93903971076375*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"00e394d5-c9b3-4e31-8512-efcb70545dfe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{"6", " ", "\[Kappa]"}], "m"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          SqrtBox["3"]}], ")"}], " ", "\[Kappa]"}], "m"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          SqrtBox["3"]}], ")"}], " ", "\[Kappa]"}], "m"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SqrtBox["3"]}], ")"}], " ", "\[Kappa]"}], "m"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SqrtBox["3"]}], ")"}], " ", "\[Kappa]"}], "m"]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.937739767379623*^9, 3.937740092885929*^9, 3.937742297421535*^9, 
   3.937742332767331*^9, 3.937824868323897*^9, 3.937827877636367*^9, 
   3.937839360965534*^9, 3.937994739999442*^9, 3.9379958437257767`*^9, 
   3.937995880627365*^9, 3.937995980572053*^9, 3.937997330390585*^9, 
   3.9379980704229097`*^9, 3.9390396227366533`*^9, {3.939039701301813*^9, 
   3.9390397115620413`*^9}, 3.939040114506309*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"cadb2854-be18-4574-8e62-71c68516b4e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "[", 
   RowBox[{"{", 
    RowBox[{"A", ",", "M"}], "}"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "estas", " ", "son", " ", "las", " ", "autofrecuencias", " ", "y", " ", 
    "los", " ", "autovectores"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.937740436417012*^9, 3.937740500823496*^9}, {
  3.9377406928161087`*^9, 3.937740695324442*^9}, {3.937740774500422*^9, 
  3.93774080247256*^9}, {3.937740897682898*^9, 3.937740897845045*^9}, {
  3.937997375799802*^9, 3.937997394304924*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"e79fd45c-4d41-4624-bf81-a12330e66725"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"6", " ", "\[Kappa]"}], "m"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"3", " ", "\[Kappa]"}], "-", 
       RowBox[{
        SqrtBox["3"], " ", "\[Kappa]"}]}], "m"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"3", " ", "\[Kappa]"}], "-", 
       RowBox[{
        SqrtBox["3"], " ", "\[Kappa]"}]}], "m"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"3", " ", "\[Kappa]"}], "+", 
       RowBox[{
        SqrtBox["3"], " ", "\[Kappa]"}]}], "m"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"3", " ", "\[Kappa]"}], "+", 
       RowBox[{
        SqrtBox["3"], " ", "\[Kappa]"}]}], "m"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox["3"], ",", "1", ",", 
       RowBox[{"-", 
        SqrtBox["3"]}], ",", 
       RowBox[{"-", "2"}], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", 
        SqrtBox["3"]}], ",", "1", ",", 
       SqrtBox["3"], ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox["3"]}], ",", "1", ",", 
       SqrtBox["3"], ",", 
       RowBox[{"-", "2"}], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       SqrtBox["3"], ",", "1", ",", 
       RowBox[{"-", 
        SqrtBox["3"]}], ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9377405017905693`*^9, 3.937740696484201*^9, {3.937740796620288*^9, 
   3.937740803364746*^9}, 3.937740898662711*^9, 3.937742297445964*^9, 
   3.937742332796954*^9, 3.937824868372859*^9, 3.9378278776649513`*^9, 
   3.937839361011694*^9, 3.9379947400380774`*^9, 3.937995843769084*^9, 
   3.93799588076042*^9, 3.9379959806106567`*^9, 3.9379973304160233`*^9, 
   3.937998070446899*^9, 3.9390396227677603`*^9, 3.939040114577002*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"be615540-e797-4ea5-965f-062a4bec7d9b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coordenadas normales", "Subsubsection",
 CellChangeTimes->{{3.937741586013399*^9, 
  3.937741589253429*^9}},ExpressionUUID->"e5abfa0a-ca69-4f51-bee5-\
7c8842950e80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "para", " ", "determinar", " ", "las", " ", "coordenadas", " ", 
     "normales"}], ",", " ", 
    RowBox[{
    "necesitamos", " ", "primero", " ", "la", " ", "matriz", " ", "E"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "esta", " ", "matriz", " ", "corresponde", " ", "a", " ", "los", " ", 
    "autovectores", " ", "normalizados", " ", "puestos", " ", "como", " ", 
    "columnas"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "tenemos", " ", "que", " ", "normalizarlos", " ", "primero", " ", "de", 
    " ", "la", " ", "forma", " ", 
    RowBox[{
     RowBox[{"a", "^", "T"}], "\[CenterDot]", "M", "\[CenterDot]", "a"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "como", " ", "los", " ", "vectores", " ", "los", " ", "tira", " ", "como",
      " ", "filas"}], ",", " ", 
    RowBox[{"escribimos", " ", "m\[AAcute]s", " ", "bien", " ", 
     RowBox[{"a", "\[CenterDot]", "M", "\[CenterDot]", 
      RowBox[{"a", "^", "T"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"autovec", "=", 
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"{", 
      RowBox[{"A", ",", "M"}], "}"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.9378246311626387`*^9, 3.937824787759115*^9}, {
   3.9378248459847307`*^9, 3.9378248899300613`*^9}, {3.937824927011943*^9, 
   3.937824971358294*^9}, 3.937825146242608*^9, 3.9378252684856052`*^9, 
   3.937825640570931*^9, 3.937827515477895*^9, 3.937997237817842*^9, {
   3.9379974017494707`*^9, 3.9379974284321404`*^9}, {3.937997460535034*^9, 
   3.93799751959269*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"41be2a5a-fcd5-4f36-b717-0542c7738e81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vec1", "=", 
   RowBox[{"autovec", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec2", "=", 
   RowBox[{"autovec", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec3", "=", 
   RowBox[{"autovec", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec4", "=", 
   RowBox[{"autovec", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec5", "=", 
   RowBox[{"autovec", "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec6", "=", 
   RowBox[{"autovec", "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.937995089407243*^9, 3.937995240660859*^9}, {
   3.937995271395691*^9, 3.93799527543708*^9}, 3.937995378249008*^9, {
   3.9379954266136703`*^9, 3.937995497676611*^9}, {3.93799557986633*^9, 
   3.93799563054004*^9}, {3.937995955792858*^9, 3.937995961372761*^9}, {
   3.937996370051958*^9, 3.937996397235458*^9}, {3.937997243174343*^9, 
   3.9379973194565372`*^9}, {3.937997545301054*^9, 3.93799755525414*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"e83985fd-9a02-44c3-93f5-96c23ec78488"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha1Sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]1", "^", "2"}], "*", 
       RowBox[{"vec1", ".", "M", ".", 
        RowBox[{"Transpose", "[", "vec1", "]"}]}]}], "==", "1"}], ",", 
     "\[Alpha]1"}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"soluci\[OAcute]n", " ", "de", " ", "\[Alpha]1"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha2Sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]2", "^", "2"}], "*", 
       RowBox[{"vec2", ".", "M", ".", 
        RowBox[{"Transpose", "[", "vec2", "]"}]}]}], "==", "1"}], ",", 
     "\[Alpha]2"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"soluci\[OAcute]n", " ", "de", " ", "\[Alpha]2"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha3Sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]3", "^", "2"}], "*", 
       RowBox[{"vec3", ".", "M", ".", 
        RowBox[{"Transpose", "[", "vec3", "]"}]}]}], "==", "1"}], ",", 
     "\[Alpha]3"}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"soluci\[OAcute]n", " ", "de", " ", "\[Alpha]3"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha4Sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]4", "^", "2"}], "*", 
       RowBox[{"vec4", ".", "M", ".", 
        RowBox[{"Transpose", "[", "vec4", "]"}]}]}], "==", "1"}], ",", 
     "\[Alpha]4"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"soluci\[OAcute]n", " ", "de", " ", "\[Alpha]4"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha5Sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]5", "^", "2"}], "*", 
       RowBox[{"vec5", ".", "M", ".", 
        RowBox[{"Transpose", "[", "vec5", "]"}]}]}], "==", "1"}], ",", 
     "\[Alpha]5"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"soluci\[OAcute]n", " ", "de", " ", "\[Alpha]5"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha6Sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]6", "^", "2"}], "*", 
       RowBox[{"vec6", ".", "M", ".", 
        RowBox[{"Transpose", "[", "vec6", "]"}]}]}], "==", "1"}], ",", 
     "\[Alpha]6"}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"soluci\[OAcute]n", " ", "de", " ", "\[Alpha]6"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9379975581871347`*^9, 3.9379975590502577`*^9}, {
   3.937997617447356*^9, 3.9379977375006523`*^9}, 3.937997775900853*^9, {
   3.93799817359048*^9, 3.9379981939917917`*^9}, {3.937998271159135*^9, 
   3.937998288046908*^9}, {3.937998344325676*^9, 3.937998353252297*^9}, {
   3.937998413228697*^9, 3.937998433993281*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"3b993426-2594-40b2-b9ac-718c2a6b6c98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]1", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]1", "\[Rule]", 
     FractionBox["1", 
      RowBox[{
       SqrtBox["6"], " ", 
       SqrtBox["m"], " ", "r"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.937998434896083*^9, 3.939039622805356*^9, 
  3.9390401146452913`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"a6800843-771d-471e-9ed1-4f2f95646974"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]2", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]2", "\[Rule]", 
     FractionBox["1", 
      RowBox[{
       SqrtBox["6"], " ", 
       SqrtBox["m"], " ", "r"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.937998434896083*^9, 3.939039622805356*^9, 
  3.9390401146469803`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"888dbf32-0814-4a8f-a8b6-ed99d4d8af13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]3", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]3", "\[Rule]", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", 
       SqrtBox["m"], " ", "r"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.937998434896083*^9, 3.939039622805356*^9, 
  3.939040114648457*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"79d41cb6-b639-48e6-a549-e04339d73718"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]4", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]4", "\[Rule]", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", 
       SqrtBox["m"], " ", "r"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.937998434896083*^9, 3.939039622805356*^9, 
  3.9390401146498327`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"a1aa4e3b-f7e9-4f7b-8f71-17a6d07f67f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]5", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]5", "\[Rule]", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", 
       SqrtBox["m"], " ", "r"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.937998434896083*^9, 3.939039622805356*^9, 
  3.939040114651258*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"47b6cd2d-70dd-4fbd-977c-1ea5f8379b57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]6", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]6", "\[Rule]", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", 
       SqrtBox["m"], " ", "r"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.937998434896083*^9, 3.939039622805356*^9, 
  3.939040114653319*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"c1e72d45-281c-4552-acf7-483daafb774d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "vamos", " ", "a", " ", "escoger", " ", "la", " ", "segunda", " ", 
    "soluci\[OAcute]n", " ", "que", " ", "es", " ", "la", " ", "positiva"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"alpha1", "=", 
     RowBox[{"\[Alpha]1", "/.", " ", 
      RowBox[{"alpha1Sol", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alpha2", "=", 
     RowBox[{"\[Alpha]2", "/.", " ", 
      RowBox[{"alpha2Sol", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alpha3", "=", 
     RowBox[{"\[Alpha]3", "/.", " ", 
      RowBox[{"alpha3Sol", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alpha4", "=", 
     RowBox[{"\[Alpha]4", "/.", " ", 
      RowBox[{"alpha4Sol", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alpha5", "=", 
     RowBox[{"\[Alpha]5", "/.", " ", 
      RowBox[{"alpha5Sol", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alpha6", "=", 
     RowBox[{"\[Alpha]6", "/.", " ", 
      RowBox[{"alpha6Sol", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a1", "=", 
     RowBox[{"alpha1", "*", "vec1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a2", "=", 
     RowBox[{"alpha2", "*", "vec2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a3", "=", 
     RowBox[{"alpha3", "*", "vec3"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a4", "=", 
     RowBox[{"alpha4", "*", "vec4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a5", "=", 
     RowBox[{"alpha5", "*", "vec5"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a6", "=", 
     RowBox[{"alpha6", "*", "vec6"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.937996048093814*^9, 3.937996086908175*^9}, {
  3.9379961940137587`*^9, 3.9379962372440434`*^9}, {3.937997752521655*^9, 
  3.9379977665059*^9}, {3.937998105687739*^9, 3.9379981229697104`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"7ea1bd72-a5dc-4795-8282-84b924b2f0f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrizE", " ", "=", " ", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "a6"}], 
     "}"}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "matriz", " ", "E", " ", "de", " ", "los", " ", "autovectores", " ", 
    "normalizados", " ", "como", " ", "columnas"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.937825620790205*^9, 3.937825625978339*^9}, {
   3.937825762156753*^9, 3.937825785229972*^9}, {3.937826228044009*^9, 
   3.937826232417094*^9}, {3.9378266743550386`*^9, 3.937826694740272*^9}, 
   3.9379962897632933`*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"b12c7f59-5b0e-4642-8a9e-cc88b36d722b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["6"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["m"], " ", "r"}]]}]},
     {
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["m"], " ", "r"}]]},
     {
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["6"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]]},
     {
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["m"], " ", "r"}]]}]},
     {
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["6"], " ", 
         SqrtBox["m"], " ", "r"}]]}], "0", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], "0", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]]},
     {
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], "0", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.937825626834317*^9, {3.937825767040347*^9, 3.937825786191759*^9}, 
   3.937826233575933*^9, 3.9378278777231693`*^9, 3.937839361074306*^9, 
   3.937994740126978*^9, 3.937995843994075*^9, 3.9379958809683323`*^9, 
   3.937995980768343*^9, 3.93799629182353*^9, 3.937997330553295*^9, 
   3.937998070671302*^9, 3.93799830107802*^9, 3.937998442120097*^9, 
   3.939039622838183*^9, 3.9390401146786213`*^9},
 CellLabel->
  "Out[97]//MatrixForm=",ExpressionUUID->"b3cdbb67-d56a-473f-9995-\
281f2034521f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Etrans", "=", " ", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "a6"}], 
    "}"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "la", " ", "transpuesta", " ", "de", " ", "la", " ", "matriz", " ", "E"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.9378264042993603`*^9, 3.9378264189128304`*^9}, 
   3.937826461729312*^9, {3.937826520846554*^9, 3.9378265268558407`*^9}, 
   3.937826561471661*^9, {3.937826612759356*^9, 3.93782670526171*^9}, {
   3.9379963097080193`*^9, 3.937996347940916*^9}, {3.937996423058736*^9, 
   3.937996441652699*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"1cb4c789-c648-48d1-9ce2-c017a7fbd090"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]]},
     {
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["6"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["6"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["6"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{
        SqrtBox["6"], " ", 
        SqrtBox["m"], " ", "r"}]]},
     {
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["m"], " ", "r"}]]}], "0", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]]},
     {
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], "0"},
     {
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["m"], " ", "r"}]]}], "0", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]]},
     {
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["m"], " ", "r"}]], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["m"], " ", "r"}]]}], 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", 
        SqrtBox["m"], " ", "r"}]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.937826659747922*^9, 3.937826668714287*^9}, 
   3.937827877729694*^9, 3.937839361093486*^9, 3.937994740133638*^9, 
   3.937995844032742*^9, 3.9379958809996033`*^9, 3.937995980790073*^9, 
   3.937996348757491*^9, {3.937996429243609*^9, 3.9379964349551983`*^9}, 
   3.9379973305614567`*^9, 3.9379980706941547`*^9, 3.93799844470953*^9, 
   3.939039622861011*^9, 3.939040114687541*^9},
 CellLabel->
  "Out[98]//MatrixForm=",ExpressionUUID->"f0f9989e-1a5f-4e34-8e35-\
5e62505d5ba0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "tenemos", " ", "entonces", " ", "que", " ", "las", " ", "\[Eta]"}], " ", 
    "=", " ", 
    RowBox[{
    "Etrans", "*", "M", "*", "\[Theta]", " ", "con", " ", "\[Theta]", " ", 
     "el", " ", "vector", " ", "de", " ", "coordenadas", " ", "generalizadas",
      " ", "originales"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"mult1", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "a6"}], 
       "}"}], ".", "M"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "mult1", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"vect\[Theta]", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3", ",", "\[Theta]4", ",", 
       "\[Theta]5", ",", "\[Theta]6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mult2", "=", 
     RowBox[{"mult1", ".", "vect\[Theta]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.937826807855648*^9, 3.937826839106164*^9}, {
   3.937826961466243*^9, 3.9378269779441843`*^9}, {3.937827273826626*^9, 
   3.937827274004518*^9}, 3.937997864449374*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"61fc53c6-ac41-4cac-a246-e8baa10df058"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixForm", "[", "mult2", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"cada", " ", "fila", " ", "representa", " ", "cada", " ", "\[Eta]", 
    RowBox[{"(", "t", ")"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.937829208440198*^9, 3.9378292173656178`*^9}, {
  3.93782926136579*^9, 3.937829275641033*^9}, {3.937840917031392*^9, 
  3.937840918399222*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"71d615d7-9fd6-4752-b1ba-de1c1a50e2d5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]1"}], 
         SqrtBox["6"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]2"}], 
         SqrtBox["6"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]3"}], 
         SqrtBox["6"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]4"}], 
         SqrtBox["6"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]5"}], 
         SqrtBox["6"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]6"}], 
         SqrtBox["6"]]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["m"], " ", "r", " ", "\[Theta]1"}], 
          SqrtBox["6"]]}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]2"}], 
         SqrtBox["6"]], "-", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]3"}], 
         SqrtBox["6"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]4"}], 
         SqrtBox["6"]], "-", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]5"}], 
         SqrtBox["6"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]6"}], 
         SqrtBox["6"]]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["m"], " ", "r", " ", "\[Theta]1"}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]2"}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["m"], " ", "r", " ", "\[Theta]3"}], "-", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]4"}], 
         SqrtBox["3"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]6"}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["m"], " ", "r", " ", "\[Theta]1"}], 
          SqrtBox["3"]]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["m"], " ", "r", " ", "\[Theta]2"}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]3"}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["m"], " ", "r", " ", "\[Theta]4"}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]5"}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         SqrtBox["m"], " ", "r", " ", "\[Theta]1"}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]2"}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["m"], " ", "r", " ", "\[Theta]3"}], "-", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]4"}], 
         SqrtBox["3"]], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]6"}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["m"], " ", "r", " ", "\[Theta]1"}], 
          SqrtBox["3"]]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["m"], " ", "r", " ", "\[Theta]2"}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]3"}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["m"], " ", "r", " ", "\[Theta]4"}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["m"], " ", "r", " ", "\[Theta]5"}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.937829218235242*^9, 3.937839361133369*^9, 
  3.9379947401769753`*^9, 3.937995844107976*^9, 3.93799588109052*^9, 
  3.9379959808368883`*^9, 3.9379964979019413`*^9, 3.937997330607059*^9, 
  3.93799807073699*^9, 3.937998449533923*^9, 3.939039622901758*^9, 
  3.9390401147133427`*^9},
 CellLabel->
  "Out[103]//MatrixForm=",ExpressionUUID->"c6bee5bb-d5ee-437a-b0b9-\
9ca90a551c50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "para", " ", "encontrar", " ", "las", " ", "coordenadas", " ", 
     "generalizadas", " ", "en", " ", "t\[EAcute]rminos", " ", "de", " ", 
     "las", " ", "normales"}], ",", " ", 
    RowBox[{
     RowBox[{"tenemos", " ", "que", " ", "\[Theta]"}], "=", "E\[Eta]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vect\[Eta]", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", ",", "\[Eta]4", ",", 
       "\[Eta]5", ",", "\[Eta]6"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"mult3", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "a6"}],
         "}"}], "]"}], ".", "vect\[Eta]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", "mult3", "]"}], 
   RowBox[{"(*", 
    RowBox[{
    "cada", " ", "fila", " ", "representa", " ", "cada", " ", "\[Theta]", 
     RowBox[{"(", "t", ")"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.937839238748356*^9, 3.9378393826817923`*^9}, {
  3.9379978860926037`*^9, 3.937997895061222*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"b8f53f4e-f724-4ce2-84c6-f7ccd41247c4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["\[Eta]1", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]2", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]3", 
         RowBox[{"2", " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]4", 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]5", 
         RowBox[{"2", " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]6", 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]]}]},
      {
       RowBox[{
        FractionBox["\[Eta]1", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]2", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]3", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]4", 
         RowBox[{"2", " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]5", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]6", 
         RowBox[{"2", " ", 
          SqrtBox["m"], " ", "r"}]]}]},
      {
       RowBox[{
        FractionBox["\[Eta]1", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]2", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]3", 
         RowBox[{"2", " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]4", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]5", 
         RowBox[{"2", " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]6", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]]}]},
      {
       RowBox[{
        FractionBox["\[Eta]1", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]2", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]3", 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]4", 
         RowBox[{"2", " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]5", 
         RowBox[{
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]6", 
         RowBox[{"2", " ", 
          SqrtBox["m"], " ", "r"}]]}]},
      {
       RowBox[{
        FractionBox["\[Eta]1", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "-", 
        FractionBox["\[Eta]2", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]4", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]6", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]]}]},
      {
       RowBox[{
        FractionBox["\[Eta]1", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]2", 
         RowBox[{
          SqrtBox["6"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]3", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]], "+", 
        FractionBox["\[Eta]5", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["m"], " ", "r"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.937839432824215*^9, 3.937994740228582*^9, 
  3.937995844180894*^9, 3.937995881214532*^9, 3.937995980894053*^9, 
  3.9379965279992437`*^9, 3.9379973306590643`*^9, 3.9379980708011103`*^9, 
  3.937998454793425*^9, 3.9390396229656067`*^9, 3.939040114753552*^9},
 CellLabel->
  "Out[107]//MatrixForm=",ExpressionUUID->"4d901b15-3715-400e-abb5-\
74042064847b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
Magnification:>1.25 Inherited,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b353efa2-f5ac-423d-a868-5c074edcdbf7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 72821, 1200, 320, "Title",ExpressionUUID->"4075c040-af30-4257-abca-edfc3174e09c"],
Cell[73400, 1224, 600, 10, 62, "Input",ExpressionUUID->"c6b5797a-f657-470d-b178-48f03d13d284"],
Cell[74003, 1236, 546, 8, 36, "Input",ExpressionUUID->"dfd2fe5f-4ea1-4d98-8dd6-11d005375c42"],
Cell[CellGroupData[{
Cell[74574, 1248, 213, 4, 54, "Subsubsection",ExpressionUUID->"88fd1815-7944-4b8f-9136-06b43c685a33"],
Cell[CellGroupData[{
Cell[74812, 1256, 2457, 74, 87, "Input",ExpressionUUID->"f00bb115-732a-4ec6-a1ed-559508b3c583"],
Cell[77272, 1332, 2899, 79, 174, "Output",ExpressionUUID->"c71028d8-5cb6-4655-9f4d-1e534042c689"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80208, 1416, 748, 16, 87, "Input",ExpressionUUID->"076a32d6-d69d-43e2-9f31-f46ba66ef4d2"],
Cell[80959, 1434, 1772, 44, 174, "Output",ExpressionUUID->"997fb8b6-4a8f-48b9-856d-4aac7ea665eb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82780, 1484, 293, 5, 54, "Subsubsection",ExpressionUUID->"1a9f2c2f-ed51-4a34-8a07-914257f5ccee"],
Cell[CellGroupData[{
Cell[83098, 1493, 769, 16, 87, "Input",ExpressionUUID->"92811736-a357-4cc0-a7e2-11b558260f1b"],
Cell[83870, 1511, 3220, 92, 174, "Output",ExpressionUUID->"ab04ddf7-3298-41ff-821f-049b634a5727"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87127, 1608, 692, 11, 36, "Input",ExpressionUUID->"3442d4ee-8d96-4f94-8371-67b17869c2bb"],
Cell[87822, 1621, 1752, 38, 43, "Output",ExpressionUUID->"978a31bd-0525-4a5d-9f50-5da2ba6e3c22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89611, 1664, 1256, 22, 36, "Input",ExpressionUUID->"00e394d5-c9b3-4e31-8512-efcb70545dfe"],
Cell[90870, 1688, 1698, 49, 63, "Output",ExpressionUUID->"cadb2854-be18-4574-8e62-71c68516b4e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92605, 1742, 618, 13, 36, "Input",ExpressionUUID->"e79fd45c-4d41-4624-bf81-a12330e66725"],
Cell[93226, 1757, 2356, 69, 96, "Output",ExpressionUUID->"be615540-e797-4ea5-965f-062a4bec7d9b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95631, 1832, 171, 3, 54, "Subsubsection",ExpressionUUID->"e5abfa0a-ca69-4f51-bee5-7c8842950e80"],
Cell[95805, 1837, 1754, 41, 138, "Input",ExpressionUUID->"41be2a5a-fcd5-4f36-b717-0542c7738e81"],
Cell[97562, 1880, 1296, 31, 164, "Input",ExpressionUUID->"e83985fd-9a02-44c3-93f5-96c23ec78488"],
Cell[CellGroupData[{
Cell[98883, 1915, 2925, 84, 189, "Input",ExpressionUUID->"3b993426-2594-40b2-b9ac-718c2a6b6c98"],
Cell[101811, 2001, 584, 18, 60, "Output",ExpressionUUID->"a6800843-771d-471e-9ed1-4f2f95646974"],
Cell[102398, 2021, 584, 18, 60, "Output",ExpressionUUID->"888dbf32-0814-4a8f-a8b6-ed99d4d8af13"],
Cell[102985, 2041, 602, 18, 60, "Output",ExpressionUUID->"79d41cb6-b639-48e6-a549-e04339d73718"],
Cell[103590, 2061, 604, 18, 60, "Output",ExpressionUUID->"a1aa4e3b-f7e9-4f7b-8f71-17a6d07f67f5"],
Cell[104197, 2081, 602, 18, 60, "Output",ExpressionUUID->"47b6cd2d-70dd-4fbd-977c-1ea5f8379b57"],
Cell[104802, 2101, 602, 18, 60, "Output",ExpressionUUID->"c1e72d45-281c-4552-acf7-483daafb774d"]
}, Open  ]],
Cell[105419, 2122, 2309, 60, 368, "Input",ExpressionUUID->"7ea1bd72-a5dc-4795-8282-84b924b2f0f0"],
Cell[CellGroupData[{
Cell[107753, 2186, 731, 15, 36, "Input",ExpressionUUID->"b12c7f59-5b0e-4642-8a9e-cc88b36d722b"],
Cell[108487, 2203, 4575, 160, 220, "Output",ExpressionUUID->"b3cdbb67-d56a-473f-9995-281f2034521f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113099, 2368, 712, 15, 36, "Input",ExpressionUUID->"1cb4c789-c648-48d1-9ce2-c017a7fbd090"],
Cell[113814, 2385, 4555, 159, 220, "Output",ExpressionUUID->"f0f9989e-1a5f-4e34-8e35-5e62505d5ba0"]
}, Open  ]],
Cell[118384, 2547, 1269, 32, 138, "Input",ExpressionUUID->"61fc53c6-ac41-4cac-a246-e8baa10df058"],
Cell[CellGroupData[{
Cell[119678, 2583, 470, 10, 36, "Input",ExpressionUUID->"71d615d7-9fd6-4752-b1ba-de1c1a50e2d5"],
Cell[120151, 2595, 5267, 167, 237, "Output",ExpressionUUID->"c6bee5bb-d5ee-437a-b0b9-9ca90a551c50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125455, 2767, 1270, 33, 138, "Input",ExpressionUUID->"b8f53f4e-f724-4ce2-84c6-f7ccd41247c4"],
Cell[126728, 2802, 4854, 154, 224, "Output",ExpressionUUID->"4d901b15-3715-400e-abb5-74042064847b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

